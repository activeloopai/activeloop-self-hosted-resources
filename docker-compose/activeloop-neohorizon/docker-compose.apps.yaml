x-environment: &environment
  USE_RABBITMQ: "true"
  USE_DEEPLAKE: "true"
  ENVIRONMENT: "local"
  POSTGRES_DATABASE: "${POSTGRES_DATABASE:?}"
  POSTGRES_HOST: "${POSTGRES_HOST:?}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:?}"
  POSTGRES_PORT: "${POSTGRES_PORT:?}"
  POSTGRES_USER: "${POSTGRES_USER:?}"
  RABBITMQ_URL: "${RABBITMQ_URL:?}"
  DEEPLAKE_ROOT_DIR: "${DEEPLAKE_ROOT_DIR:-/var/lib/deeplake}"
  AL_API_TOKEN: "${AL_API_TOKEN:?}"
  GEMINI_API_KEY: "${GEMINI_API_KEY}"
  OPENAI_API_KEY: "${OPENAI_API_KEY}"
  TEXT_IMAGE__MATRIX_OF_EMBEDDINGS__INGESTION_URL: "${TEXT_IMAGE__MATRIX_OF_EMBEDDINGS__INGESTION_URL:?}"
  TEXT_IMAGE__MATRIX_OF_EMBEDDINGS__QUERY_URL: "${TEXT_IMAGE__MATRIX_OF_EMBEDDINGS__QUERY_URL:?}"
  TEXT_IMAGE__EMBEDDING__INGESTION_URL: "${TEXT_IMAGE__EMBEDDING__INGESTION_URL:?}"
  TEXT_IMAGE__EMBEDDING__QUERY_URL: "${TEXT_IMAGE__EMBEDDING__QUERY_URL:?}"
  TEXT__EMBEDDING__INGESTION_URL: "${TEXT__EMBEDDING__INGESTION_URL:?}"
  TEXT__EMBEDDING__QUERY_URL: "${TEXT__EMBEDDING__QUERY_URL:?}"
  TEXT__SUMMARY_EMBEDDING__QUERY_URL: "${TEXT__SUMMARY_EMBEDDING__QUERY_URL:-http://al-neohorizon-model:8000/v2/models/${AL_MODEL_NAME:?}/infer}"
  TEXT__SUMMARY_EMBEDDING__INGESTION_URL: "${TEXT__SUMMARY_EMBEDDING__INGESTION_URL:-http://al-neohorizon-model:8000/v2/models/${AL_MODEL_NAME:?}/infer}"
  GOTENBERG_ENDPOINT: "${RABBITMQ_URL:?}"
  # DEEPLAKE_CREDS: "${DEEPLAKE_CREDS}" // Fore more details refer to https://github.com/activeloopai/activeloop-self-hosted-resources?tab=readme-ov-file#deeplake-storage-credentials
  # Uncomment this if you want to use google application credentials
  # GOOGLE_APPLICATION_CREDENTIALS: "/creds/google-application-credentials.json"

x-shared-config: &shared-config
  restart: always
  depends_on:
    - change_vol_ownership
  networks:
    - al-neohorizon-apps-network
  volumes:
    - al_neohorizon_deeplake_data:/var/lib/deeplake
  # Uncomment this if you want to use google application credentials
  # configs:
  #   - source: google-application-credentials
  #     target: /creds/google-application-credentials.json

services:
  change_vol_ownership:
    container_name: al-neohorizon-change-vol-ownership
    image: busybox
    command: chown -R 10001:10001 /var/lib/deeplake
    restart: "no"
    volumes:
      - al_neohorizon_deeplake_data:/var/lib/deeplake
  main-api:
    container_name: al-neohorizon-main-api
    image: quay.io/activeloopai/neohorizon-main:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - lightweight_service.py
    environment:
      PORT: 8000
      <<: *environment
    <<: *shared-config
  files-api:
    container_name: al-neohorizon-files-api
    image: quay.io/activeloopai/neohorizon-files:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - files_service.py
    environment:
      PORT: 8000
      <<: *environment
    <<: *shared-config
  nango-webhook-service:
    container_name: al-neohorizon-nango-webhook-service
    image: quay.io/activeloopai/neohorizon-nango:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - nango_webhook_service.py
    environment:
      PORT: 8000
      <<: *environment
    <<: *shared-config
  vector_search_worker:
    container_name: al-neohorizon-vector-search-worker
    image: quay.io/activeloopai/neohorizon-main:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - vector_search_worker.py
    environment:
      <<: *environment
    <<: *shared-config
  file_processor_worker:
    container_name: al-neohorizon-file-processor-worker
    image: quay.io/activeloopai/neohorizon-main:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - file_processor_worker.py
    environment:
      <<: *environment
    <<: *shared-config
  embedding_worker:
    container_name: al-neohorizon-embedding-worker
    image: quay.io/activeloopai/neohorizon-main:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - embedding_worker.py
    environment:
      <<: *environment
    <<: *shared-config
  summary_generation_worker:
    container_name: al-neohorizon-summary-generation-worker
    image: quay.io/activeloopai/neohorizon-main:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - summary_generation_worker.py
    environment:
      <<: *environment
    <<: *shared-config
  file_status_worker:
    container_name: al-neohorizon-file-status-worker
    image: quay.io/activeloopai/neohorizon-main:${AL_IMAGE_TAG:-latest}
    entrypoint:
      - python3
      - file_status_worker.py
    environment:
      <<: *environment
    <<: *shared-apps

  proxy:
    container_name: al-neohorizon-proxy
    image: nginx:latest
    ports:
      - "${LISTEN_HOST:-0.0.0.0}:${LISTEN_PORT:-80}:80"
    configs:
      - source: al-proxy-config
        target: /etc/nginx/conf.d/default.conf
    restart: always
    depends_on:
      - main-api
      - files-api
      - nango-webhook-service
    networks:
      - al-neohorizon-apps-network

networks:
  al-neohorizon-apps-network:
    driver: bridge

configs:
  # Uncomment this if you want to use google application credentials
  # google-application-credentials:
  #   content: |
  #     JSON_CONTENT_HERE
  al-proxy-config:
    content: |
      server {
        client_max_body_size 512m;
        listen 80;
        server_name _;

        location / {
          proxy_pass http://al-neohorizon-main-api:8000;
        }

        location /files {
          proxy_pass http://al-neohorizon-files-api:8000;
        }

        location /nango/webhook {
          proxy_pass http://al-neohorizon-nango-webhook-service:8080;
        }

      }

volumes:
  al_neohorizon_deeplake_data:
    driver: local
