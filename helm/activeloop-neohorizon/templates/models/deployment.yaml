{{- with .Values.models }}
{{- range . }}
{{- if not (empty .load_models) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" (include "chart.name" $) .name | kebabcase }}
  labels:
    app.kubernetes.io/name: {{ .name | kebabcase }}
    app.kubernetes.io/component: models
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/part-of: {{ include "chart.name" $ }}
    helm.sh/chart: {{ $.Chart.Name }}
    {{- with .labels }}
    {{- toYaml . | nindent 8 }}
    {{- end }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .replicas | default 1 }}
  {{- with .strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name:      {{ .name | kebabcase }}
      app.kubernetes.io/component: models
      app.kubernetes.io/instance:  {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .name | kebabcase }}
        app.kubernetes.io/component: models
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
        app.kubernetes.io/part-of: {{ include "chart.name" $ }}
        helm.sh/chart: {{ $.Chart.Name }}
        {{- with .labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .serviceAccount.create }}
      {{- if .serviceAccount.name }}
      serviceAccountName: {{ .serviceAccount.name }}
      {{- else }}
      serviceAccountName: {{ .name }}
      {{- end }}
      {{- end }}
      {{- with .imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .name | kebabcase }}
          {{- $image := get . "image" | default dict }}
          image: "{{ get $image "registry" | default $.Values.global.image.registry }}/{{ get $image "repository" | default $.Values.global.image.repository }}:{{ get $image "tag" | default $.Values.global.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .imagePullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 8000
              protocol: TCP
          {{- with .command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .load_models }}
          args:
            {{- range . }}
            - --load-model={{ . }}
            {{- end }}
          {{- end }}

          {{- with .env }}
          env:
            {{- range $key, $value := . }}
            - name:  {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}

          {{- if $.Values.global.useExistingSecret }}
          envFrom:
            - secretRef:
                name: {{ $.Values.global.useExistingSecret }}
          {{- else }}
          {{- if .envFrom }}
          envFrom:
            {{- toYaml .envFrom | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .enableHealthProbes }}
          livenessProbe:
            httpGet:
              path: /v2/health/live
              port: 8000
            initialDelaySeconds: 300
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v2/health/ready
              port: 8000
            initialDelaySeconds: 300
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          {{- end }}

          {{- with .resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .securityContext | default $.Values.global.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}

      {{- with .nodeSelector | default $.Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .affinity | default $.Values.global.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .tolerations | default $.Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .podSecurityContext | default $.Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
{{- end }}
